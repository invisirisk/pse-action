name: PSE Demo

on:
  push:
  pull_request:

permissions:
  checks: write
  contents: read
  packages: read

jobs:
  npm:
    runs-on: ubuntu-latest
    #runs-on: self-hosted

    services:
      # Label used to access the service container
      pse:
        image: invisirisk/pse:latest
        env:
          POLICY_AUTH_TOKEN: ${{ secrets.POLICY_AUTH_TOKEN }}
          POLICY_URL: https://api.github.com/repos/invisirisk/policy/tarball/main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_AUTH_TOKEN: ${{ secrets.OPENAI_AUTH_TOKEN }}
          #PSE_DEBUG_FLAG: --alsologtostderr
          #POLICY_LOG: t
    container:
      image: node:19-alpine
      options: --cap-add=NET_ADMIN

    steps:
      - run: apk add make git
      - uses: actions/checkout@v3
      - name: setup action
        run: |
          NODE_OPTIONS=--openssl-legacy-provider npm install
          npm install -g @vercel/ncc
          NODE_OPTIONS=--openssl-legacy-provider npm run prepare
      - uses: ./
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - run: cd demo/npm && make
        env:
          IR_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }} # The build uses private NPM registry

  secret-leak:
    runs-on: ubuntu-latest
    services:
      # Label used to access the service container
      pse:
        image: invisirisk/pse:latest
        env:
          POLICY_AUTH_TOKEN: ${{ secrets.POLICY_AUTH_TOKEN }}
          POLICY_URL: https://api.github.com/repos/invisirisk/policy/tarball/main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_AUTH_TOKEN: ${{ secrets.OPENAI_AUTH_TOKEN }}
          PSE_DEBUG_FLAG: --alsologtostderr
          POLICY_LOG: t
    container:
      image: golang:1.20.3-bullseye
      options: --cap-add=NET_ADMIN
    steps:
      - run: apt-get update && apt-get install -y make git npm
      - uses: actions/checkout@v3
      - name: setup action
        run: |
          npm install
          npm install -g @vercel/ncc
          npm run prepare
      - uses: ./
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - run: cd demo/secret && make
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
